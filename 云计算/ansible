centos是一个企业级版本，适合喜欢稳定，可靠性和软件长期支持的用户
ubunto是一个以桌面应用为主的linux操作系统，固定发布周期和支持期
debin非常稳定，卓越的质量控制，但更新比较缓慢
fedora 高度创新，突出安全功能，大量支持软件包，优先倾向于企业功能
susep 配置工具全面且直观，拥有大型软件包库，但资源过于沉重会影响速率



官方下载镜像源和软件包
www.centos.org
######################################################################
Get CentOS Now --> DVD ISO --> Mirror List -->Asia CHina http://mirrors.huaweicloud.com/centos/
选择centos版本

ansible可以实现：
1.自动化部署APP
2.自动化管理配置项
3.自动化持续交付
4.自动化云服务管理
优点：
1.只需要ssh和python使用
2.无客户端
3.ansible功能强大，模块丰富
4.上手容易，门槛低
5.使用公司比较多，社区活跃
6.基于python开发，做二次开发更容易

1.真机上：
tar -xf ansible_soft.tar.xz
cd ansible_soft
mkdir /var/ftp/ansible
cp *  /var/ftp/ansible
createrepo /var/ftp/ansible

管理主机
vim /etc/yum.repos.d/centos.repo
baseurl=ftp://192.168.1.254/ansible



...
yum -y install ansible

1.修改ansible.cfg配置文件
inventory      = /etc/ansible/hosts     //指定分组文件路径，主机的分组文件hosts
host_key_checking = False		打开测试就无需输yes

2.定义主机，分组
	vim /etc/ansible/hosts
[web]
web1
web2

[db]
db[1:2]	 1:2为db1到db2两台主机，1：20为db1到db20多台主机

[other]
cache

absible web --list-hosts		显示web组的主机
ansible db --list-hosts
ansible all --list-hosts		显示所有组的主机
3.直接测试
	ansible cache -m ping		失败颜色为红色

ansible web -m ping -k	   建议一开始给其他主机发送公钥，就无需交互输密码
SSH password:密码

当没有发公钥时，在主机后面加此项就无需输入秘密
web1 ansible_ssh_pass="主机密码"	
给组配置公共参数
[web:vars]
ansible_ssh_pass="密码"	
调用web和db组所有的主机，app可随便命名，children不能变
[app:children]	
web
db

批量查看负载
ansible app -m command -a 'uptime'    

ssh-keygen -t rsa -b 2048 -N ''  //创建密钥
给所有主机部署密钥
ansible all -m authorized_key -a "user=root exclusive=true manage_dir=true key='$(< /root/.ssh/id_rsa.pub)'" -k

在主机web1 /tmp下创建f3文件
ansible web1 -m shell -a 'chdir=/tmp touch f3'

script模块，调用脚本tt.sh
ansible web,web2 -m script -a './tt.sh'

copy模块，把本机src resolv.conf 发送到所有主机all的dest  /etc/resolv.conf
ansible all -m copy -a 'src=/etc/resolv.conf dest=/etc/resolv.conf'

lineinfile/replace
path 目的文件
regexp 正则表达式
line 替换后的结果
ansible  web1 -m lineinfile -a 'path="/etc/selinux/config" regexp="^SELINUX=" line="SELINUX=disabled"'

replace修改匹配的,没有匹配的不修改

ansible web1 -m replace -a 'path="/etc/sysconfig/network-scripts/ifcfg-eth0" regexp="^(NOBOOT).*" replace="\1=\"yes\""'

yum 模块
name	操作的软件包名
state	动作

安装telnet软件包,不写state默认
ansible web1 -m yum -a 'name="telnet"'
删除软件
ansible web1 -m yum -a 'name="telnet" state=removed'

service 模块
name 服务名
state 动作服务启动，停止，重启，重新加载  (started,stopped,restarted,reloaded)
enabled  yes|no 开机自启

ansible web1 -m service -a 'name=chronyd state=started enabled=yes'

把apache默认端口改成8080
ansible all -m lineinfile -a 'path="/etc/httpd/conf/httpd.conf" regexp="^Listen" line="Listen 8080"'




