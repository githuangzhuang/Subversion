linux 数据库管理  关系型数据  MySQL
非关系型数据  Redis 和 MongoDB
IDC监控
lingx安全与监控   系统安全  服务安全  数据安全  监控Zabbix
###############################################
搭建数据服务器
数据库服务的基本使用
数据类型
数据包括： 照片 音乐 文本文件 电影
提供数据库服务软件：Oracle DB2  SQL server ------商业软件 这些都是关系型数据库
                     MySQL ------开原，跨平台
跨平台三大主流操作系统：windows  unix  linux
SQL 只能装windows
oracle  DB2 可以跨平台

MySQL的特点：适合中小型企业的关系型数据库服务器软件
支持多种操作系统windows  unix  linux
支持多种开发语言 php perl  python
可移植性好

DB:数据库-数据    DBMS：数据库管理系统-软件-mysql    DBS：数据库系统-DB+DBMS
 可以与apache  nginx  tomcat组合
###############################################
  mariadb
rpm -e --nodeps mariadb     #仅删除数据库软件，不删除依赖包
/etc/my.cnf                   #主配置文件
/var/lib/mysql/*               #主目录
##############################################################################################
   mysql
ps  -C mysqld 或 ps aux | grep mysqld           #查进程
netstat -anputl | grep 3306                       #查端口
 /var/lib/mysql                                   #主目录
/etc/my.cnf				                          #主配置文件

mysql的安装：
tar  -xvf  mysql-5.7.17.tar                   #准备mysql tar包
yum -y install perl-JSON                       #安装依赖包
rpm -UVh  mysql-community*.rpm            #升级安全
mysql  -h服务器IP  -uroot  -p密码            #登陆mysql
grep password  /var/log/mysqld.log           #查看初始密码
开始必须修改mysql的初始密码，要求：数字、字母大小写和符号的组合
alter user root@localhost identified by “密码”；   #修改密码
show databases;                         #查看数据库的库

###############################################
修改密码策略（root口令）
1）show variables like “%password%”;            #查看全局变量
   set global validate_password_policy=0;         #修改密码的复杂度，0只限制长度，1要求长度，数字，大小写和特殊字符；2，包括1的要求还有字典文件
   set global validate_password_length=6;         #密码长度6位
修改完密码之后，退出mysql ，先停止mysql服务，在配置文件修改
2）/etc/my.cnf  
   [mysqld]
   validate_password_policy=0
   validate_password_length=6
再重启mysqld

把数据存储到数据库的流程
1.连接服务器  建库  建表  插入记录  断开连接
数据库服务器 <--- 库<--- 表<--- 记录 <--- 列  
SQL指令不分大小写（密码、变量除外）
select database();            #显示当前所在的库
use 库名；                   #进入库
create database 库名；       #建库
drop  database  库；         #删库
\c                       废除当前输入错的指令

常用的SQL操作语言(指令)：DDL 数据定义语言(create alter drop)
              DML 数据操作语言(insert update delete)
      DCL 数据控制语言(grant revoke)
      DTL 数据事物语言(commit rollback savepoint)
##############################################################################################
建表
  create table  库名.表名（name char(10),age int);    #char-字符  int-数字
查看表结构
             desc  库名.表名;
查看表记录
             select  *  from  库名.表名;
插入表信息
  insert into 库名.表名 values(“tom ”,18),(“ ”,数字);    #字符用双引号，数字不用
修改表记录
  update  库名.表名 set age=19  where name=”tom”;  #修改tom的age为19
  update  库名.表名  set age=18;                     #修改所有age为18
删除表记录
  delete from  库名.表名  where name=”tom”;    
  delete from     库名.表名；
删除表
drop table 库名.表名;
gb2312 / utf8
create table 表名(姓名 char(3),年龄 int) default charset=utf8       #指定字符级
show create table表名；           #显示创建表时的命令

常见的信息种类： 
数值型：体重、身高、成绩、工资
字符型：姓名、工作单位、住址
枚举型：兴趣爱好、性别
日期和时间型：出生日期、注册时间
数字类型:
整型     9  ； -19
浮点型  12.88 ；  -12.01
单精度    float(8,2)   123456.78    #整个8位数，2个小数位
双精度    double


create table t2( age tinyint unsigned, pay float(7,2) )        #unstgned 没有符号的存储范围

tinyint          -128~127        0~255
smallint         -32768~32767   0~65535
mediumint      -2^23~2^23-1   0~2^24-1        #2的次方
int               -2^31~2^31-1       0~2^32-1  
bigint            -2^63~2^63-1       0~2^64-1
float               2的指数范围-127～128
double             2的指数范围-1023～1024
unsigned             使用无符号存储范围
Decimal            -10^38~10^38-1
char   最大255         
varchar 最大65532      一定要指定范围
###############################################
时间类型：
year        年份   2009
date       日期  20090813              #2009年8月13号
day       日期    日
time        时间  083000                  早上8点30分整
datetime   日期时间  20090813160630    2009年8月13号下午4点6分13妙

>create table t4 (
    -> name char(10),
    -> birthday date,
    -> start year,
    -> upwork time,
-> party datetime);

>insert into t4 values("tom",19900813,2009,083000,20181118203000);

时间函数：
now()      获取系统当前日期和时间
curdate()   获取当前系统日期
curtime()   获取当前系统时刻
year()			获取指定时间的年份
day/date()          指定时间的日期
mounth()            指定月份
time()               指定时刻
sleep(n)         休眠n妙

> insert into t4 values("bob",date(now()),year(now()),date(083000),now());
###############################################
枚举类型：
  set()  多选               enum()   单选
> create table t5 values(
    -> name char(10),
    -> likes set("eat","sleep","game","film"),
    -> sex enum("boy","girl","nio"),
-> );

insert into t5 values("tom","eat,sleep","boy");      #必须是列举里面的
